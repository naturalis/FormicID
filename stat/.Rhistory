library(reshape2) # for using melt()
library(magick) # for image conversion because jpg files are read
top101 <-
read.csv('top101.csv') # spreadsheat containing catalognumber, scientific name,
# shot_type and image url
# head(top101)
summary(top101)
str(top101)
p <- ggplot(top101)
p + geom_bar(aes(shot_type), position = 'dodge') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
ggtitle("Shot type distribution")
top101_melt <- melt(top101)
View(top101_melt)
plot(top101_melt)
plot(top101_melt$scientific_name, top101_melt$shot_type)
barplot(top101_melt$scientific_name, top101_melt$shot_type)
barplot(top101_melt$scientific_name, count(top101_melt$shot_type))
count(top101_melt$shot_type)
shotcount <- count(top101_melt$shot_type)
plot(shotcount)
barplot(shotcount)
hist(shotcount)
hist(shotcount$freq)
hist(shotcount$x)
freq
hist(shotcount$freq)
plot(shotcount$freq)
plot(shotcount)
plot(shotcount, type = h)
plot(shotcount, type = l)
plot(shotcount, type = 'h')
plot(shotcount, type = 'l')
# head(top101)
summary(top101)
species<- count(top101_melt$scientific_name)
species
sum(species)
sum(species$)
sum(species$freq)
p <- ggplot(top101)
p + geom_bar(aes(shot_type), position = 'dodge') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
ggtitle("Shot type distribution")
g <-
ggplot(top101) # Ploting image distribution per species per shot type
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram on species distrubition per shot_type",
subtitle = "Only species with over 300 images are shown") +
coord_flip()
ount(top101_melt$scientific_name)
count(top101_melt$scientific_name)
species <- count(top101_melt$scientific_name)
sort(species)
species
sort(species$freq)
sort(species)
sort(species[1:2])
sort(species[1,2])
sort(species[2])
sort(species[1])
sort(species[,1:2])
sort(species[1:2,])
View(species)
species <- matrix(count(top101_melt$scientific_name))
species[order(species[,1],species[,2],decreasing=T),]
species[order(species[,2],decreasing=T),]
species[order(species[,1],decreasing=T),]
View(species)
species <- data.frame(matrix(count(top101_melt$scientific_name)))
View(species)
species <- data.frame(count(top101_melt$scientific_name))
View(species)
species[order(species[,2],decreasing=T),]
View(top101)
species[order(species[,2],decreasing=T),]
# Link to a small explanation on plotting histograms and density curves.
# https://www.statmethods.net/graphs/density.html
par(mfrow=c(1,2))
# Histogram
h <- hist(
size_kb,
breaks = 50,
col = "red",
xlab = "File size (kb)",
main = "File size distribution of the top 101 most imaged species"
)
# Plotting a normal curve on the histogram
xfit <- seq(min(size_kb), max(size_kb), length = 40)
yfit <- dnorm(xfit, mean = mean(size_kb), sd = sd(size_kb))
yfit <- yfit * diff(h$mids[1:2]) * length(size_kb)
lines(xfit, yfit, col = "blue", lwd = 2)
# Kernel density plot
d <- density(files_info$size2)
plot(d, main = "File size distribution of the top 101 most imaged species")
polygon(d, col = "red", border = "blue")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt)
g + geom_boxplot(aes(x = variable, y = value), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Changing columnnames and rownames
colnames(df) <- c('height', 'width', 'depth', 'channel')
# Removing grayscale images to a different dataframe
df_channel_wrong <- subset(df, channel <= 2)
df_good <- subset(df, channel > 2)
df_good_melt <- melt(df_good[1:2])
summary(df_good_melt)
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt)
g + geom_boxplot(aes(x = variable, y = value), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram on species distrubition per shot_type",
subtitle = "Only species with over 300 images are shown") +
coord_flip() +
theme(plot.title = element_text(size = 40))
g <-
ggplot(top101) # Ploting image distribution per species per shot type
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram on species distrubition per shot_type",
subtitle = "Only species with over 300 images are shown") +
coord_flip() +
theme(plot.title = element_text(size = 40))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
theme(plot.title = element_text(size = 40)
plot.subtitle = element_text(size = 25))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25))
g <-
ggplot(top101) # Ploting image distribution per species per shot type
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
plot.labs = element_text(size = 20))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
axis.text = element_text(size = 20))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
axis.title = element_text(size = 20))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20))
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = 'top')
View(top101)
str(top101)
levels(top101$shot_type)[levels(top101$shot_type)=='d'] <- 'dorsal'
levels(top101$shot_type)[levels(top101$shot_type)=='h'] <- 'head'
levels(top101$shot_type)[levels(top101$shot_type)=='p'] <- 'profile'
View(top101)
p <- ggplot(top101)
p + geom_bar(aes(shot_type), position = 'dodge') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
ggtitle("Shot type distribution")
g <-
ggplot(top101) # Ploting image distribution per species per shot type
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = 'top')
g <- ggplot(top101)
g + geom_bar(aes(shot_type), position = 'dodge') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
ggtitle("Shot type distribution")
g <-
ggplot(top101) # Ploting image distribution per species per shot type
g + geom_bar(aes(scientific_name, fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(plot.title = element_text(size = 40),
plot.subtitle = element_text(size = 25),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = 'top')
setwd(
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/stat/top101"
)
data_dir <- # Setting the directory that contains all the images
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images"
library(ggplot2) # for plotting
library(jpeg)
library(imager) # for reading jpg files
library(reshape2) # for using melt()
library(magick) # for image conversion because jpg files are read
top101 <-
read.csv('top101.csv') # spreadsheat containing catalognumber, scientific name,
# shot_type and image url
imaegs[1]
images[1]
images[1]
images[2]
images[3]
image_append(images[1])
image_append(images[2])
image_append(images[3])
img_d <- image_read(images[1])
img_h <- image_read(images[2])
img_p <- image_read(images[2])
image_append(img_d)
image_append(img_h)
image_append(img_p)
image_append(img_d)
image_append(img_h)
image_append(img_p)
casent0102125 <- image_read(images[1],images[2], images[3])
image_append(casent0102125)
casent0102125 <- c(img_d, img_h, img_p)
img_d <- image_read(images[1])
img_h <- image_read(images[2])
img_p <- image_read(images[2])
casent0102125 <- c(img_d, img_h, img_p)
image_info(casent0102125)
image_append(casent0102125)
img_d <- image_read(images[1])
img_h <- image_read(images[2])
img_p <- image_read(images[3])
casent0102125 <- c(img_d, img_h, img_p)
image_info(casent0102125)
image_append(casent0102125)
setwd(
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/stat/top101"
)
data_dir <- # Setting the directory that contains all the images
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images"
library(ggplot2) # for plotting
library(jpeg)
library(imager) # for reading jpg files
library(reshape2) # for using melt()
library(magick) # for image conversion because jpg files are read
top101 <-
read.csv('top101.csv') # spreadsheat containing catalognumber, scientific name,
# shot_type and image url
img_d <- image_read(images[1])
img_h <- image_read(images[2])
img_p <- image_read(images[3])
casent0102125 <- c(img_d, img_h, img_p)
image_info(casent0102125)
image_append(casent0102125)
img_d <- image_read(images[1])
img_h <- image_read(images[2])
img_p <- image_read(images[3])
casent0102125 <- c(img_d, img_h, img_p)
image_info(casent0102125)
image_append(casent0102125)
image_append(image_scale(casent0102125), "x118"
image_append(image_scale(casent0102125), "x118")
image_append(image_scale(casent0102125, "x118"))
image_append(image_scale(casent0102125, "x52"))
img_d <- image_read(images[1])
img_d
img_d <- image_read(images[1])
a_australis <- image_append(image_scale(casent0102125, "x52"))
image_write(a_australis, path = 'a_australis.png', format = 'png')
casent0102125 <- c(img_h, img_d, img_p)
image_info(casent0102125)
a_australis <- image_append(image_scale(casent0102125, "x52"))
image_write(a_australis, path = 'a_australis.png', format = 'png')
View(df_good)
View(top101)
View(df)
unique_species <- unique(top101[,c("scientific_name", "shot_type")])
View(unique_species)
unique_species <- unique(top101[,c("scientific_name", "shot_type",'image_url')])
View(unique_species)
unique_species <- aggregate(.~scientific_name, unique(top101), toString)
View(unique_species)
unique_species <- top101[!duplicated(top101[2:3]),]
View(unique_species)
View(top101)
top101_nobroken <- top101[-c(387:401,5111:5113)]
unique_species <- top101_nobroken[!duplicated(top101[2:3]),]
top101_nobroken <- top101[-c(387:401,5111:5113),]
unique_species <- top101_nobroken[!duplicated(top101[2:3]),]
View(unique_species)
for (species in unique_species) {
img <- image_read(unique_species[4])
print(image_info(img))
}
View(unique_species)
for (species in unique_species) {
img <- image_read(string(unique_species[4]))
print(image_info(img))
}
for (species in unique_species) {
img <- image_read(as.string(unique_species[4]))
print(image_info(img))
}
for (species in unique_species) {
img <- image_read(url(unique_species[4]))
print(image_info(img))
}
img <- image_read(url(unique_species[,4]))
for (species in unique_species) {
urllink <- url(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
View(unique_species)
urllink <- url(unique_species['image_url'])
for (species in unique_species) {
urllink <- url(unique_species['image_url'])
img <- image_read(urllink)
print(image_info(img))
}
str(unique_species)
unique_species$image_url <- as.character(unique_species$image_url)
for (species in unique_species) {
urllink <- url(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
str(unique_species)
for (species in unique_species) {
urllink <- url(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
urllink <- url(unique_species[4], open = "")
for (species in unique_species) {
urllink <- url(unique_species[4], open = "")
img <- image_read(urllink)
print(image_info(img))
}
urllink <- url(unique_species['image_url'])
urllink <- url(unique_species$image_url)
urllink <- url(species[4])
for (species in unique_species) {
urllink <- url(species[4])
img <- image_read(urllink)
print(image_info(img))
}
urllink <- url(unique_species[4])
for (species in unique_species) {
#    urllink <- url(unique_species[4])
img <- image_read(unique_species[4])
print(image_info(img))
}
unique_species[4]
for (row in unique_species) {
urllink <- url(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
urllink <- url(paste0(unique_species[4]))
for (row in unique_species) {
urllink <- url(paste0(unique_species[4]))
img <- image_read(urllink)
print(image_info(img))
}
for (row in unique_species) {
urllink <- paste0(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
for (row in unique_species) {
urllink <- unique_species[4]
img <- image_read(urllink)
print(image_info(img))
}
urllink <- as.quoted(unique_species[4])
for (row in unique_species) {
urllink <- as.quoted(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
for (row in unique_species) {
urllink <- urltools::path(unique_species[4])
img <- image_read(urllink)
print(image_info(img))
}
image_read(unique_species[4])
urllist <- list(unique_species[4])
View(urllist)
urllist <- apply(unique_species, 2)
urllist <- apply(unique_species, 4)
urllist <- unique_species[,4]
urllink <- urllist
for (row in urllist) {
urllink <- urllist
img <- image_read(urllink)
print(image_info(img))
}
urllist_test <- urllist[1:5,]
urllist_test <- unique_species[1:5,4]
urllink <- urllist_test
urllist_test <- unique_species[1:5,4]
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
print(image_info(img))
}
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
print(image_info(img))
}
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
print(img)
}
for (row in urllist_test) {
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
image_append(scale(img, 'x58'))
}
images_all <- c()
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
images_all <- c(images_all, img)
}
image_append(image_scale(images_all, "x52"))
plot(images_all)
images_read(images_all)
read_images(images_all)
image_read(images_all)
images_all
urllist_test <- unique_species[1:25,4]
images_all <- c()
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
images_all <- c(images_all, img)
}
urllist_test <- unique_species[1:25,4]
images_all <- c()
for (row in urllist_test) {
urllink <- urllist_test
img <- image_read(urllink)
images_all <- c(images_all, img)
}
images_all
