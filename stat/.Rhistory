rownames(df) <- images
# Removing grayscale images to a different dataframe
df_channel_wrong <- subset(df, channel <= 2)
df_good <- subset(df, channel > 2)
df_good$names <- rownames(df_good)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern="/Users/nijram13/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images/", replacement = ""))
df_good2 <- as.data.frame(sapply(df_good2,gsub,pattern=".jpg", replacement = ""))
library(stringr)
df_shot_types <- str_sub(df_good2$names, -1, -1)
df_good2$shot_type <- df_shot_types
df_good_melt <- melt(df_good2[1:6])
summary(df_good_melt)
df_good_melt$height <- as.numeric(as.character(df_good_melt$height))
df_good_melt$width <- as.numeric(as.character(df_good_melt$width))
df_good_melt$shot_type <- as.factor(df_good_melt$shot_type)
df_good_small <- df_good_melt[,c(1,2,6)]
melted_df <- melt(df_good_small)
# Boxplot of the hight and width distribution
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Channel", labels = c('Height', 'Width')) +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g <- ggplot(size_kb_df, aes(size_kb))
g + geom_histogram(
binwidth = 1,
colour = 'black',
aes(y = ..density..),
fill = 'deepskyblue3'
) +
stat_function(fun = dnorm,
color = 'red',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
guides(fill = FALSE)
# Link to a small explanation on plotting histograms and density curves.
# https://www.statmethods.net/graphs/density.html
size_kb_df <- data.frame(size_kb)
g <- ggplot(size_kb_df, aes(size_kb))
files_info$size2 <-
files_info$size / 1000 # Convert bytes to kilobytes
size_kb <-
files_info$size2 # Creating a variable containing only the file size in Kb
# summary(size_kb)
# boxplot(size_kb)
cat('The mean size is ', mean(size_kb), 'kb') # What is the mean size?
files_info <- # Reading all the images in the directory
file.info(list.files(
path = data_dir,
pattern = ".jpg",
full.names = TRUE
))
# head(files_info)
files_info$size2 <-
files_info$size / 1000 # Convert bytes to kilobytes
size_kb <-
files_info$size2 # Creating a variable containing only the file size in Kb
# summary(size_kb)
# boxplot(size_kb)
cat('The mean size is ', mean(size_kb), 'kb') # What is the mean size?
# Link to a small explanation on plotting histograms and density curves.
# https://www.statmethods.net/graphs/density.html
size_kb_df <- data.frame(size_kb)
g <- ggplot(size_kb_df, aes(size_kb))
g + geom_histogram(
binwidth = 1,
colour = 'black',
aes(y = ..density..),
fill = 'deepskyblue3'
) +
stat_function(fun = dnorm,
color = 'red',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
guides(fill = FALSE)
# head(top101)
summary(top101)
str(top101)
species <- data.frame(count(top101$scientific_name))
species[order(species[, 2], decreasing = T),]
levels(top101$shot_type)[levels(top101$shot_type) == 'd'] <-
'dorsal'
levels(top101$shot_type)[levels(top101$shot_type) == 'h'] <- 'head'
levels(top101$shot_type)[levels(top101$shot_type) == 'p'] <-
'profile'
# https://stackoverflow.com/questions/8186436/order-stacked-bar-graph-in-ggplot
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
top101_transp[1] <- sapply(
top101_transp[1],
gsub,
pattern = "_",
replacement = " "
)
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
g <- ggplot(top101)
g + geom_bar(aes(shot_type), position = 'dodge', fill = 'deepskyblue3') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
labs(title = "Bargraph of the shot type distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g <-
ggplot(melted) # Ploting image distribution per species per shot type
setwd(
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/stat/top101"
)
library(ggplot2) # for plotting
library(jpeg)
library(imager) # for reading jpg files
library(reshape2) # for using melt()
library(magick) # for image conversion because jpg files are read
data_dir <- # Setting the directory that contains all the images
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images"
top101 <-
read.csv('top101.csv') # spreadsheat containing catalognumber, scientific name,
# shot_type and image url
# head(top101)
summary(top101)
str(top101)
species <- data.frame(count(top101$scientific_name))
species[order(species[, 2], decreasing = T),]
levels(top101$shot_type)[levels(top101$shot_type) == 'd'] <-
'dorsal'
levels(top101$shot_type)[levels(top101$shot_type) == 'h'] <- 'head'
levels(top101$shot_type)[levels(top101$shot_type) == 'p'] <-
'profile'
# https://stackoverflow.com/questions/8186436/order-stacked-bar-graph-in-ggplot
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
top101_transp[1] <- sapply(
top101_transp[1],
gsub,
pattern = "_",
replacement = " "
)
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
files_info <- # Reading all the images in the directory
file.info(list.files(
path = data_dir,
pattern = ".jpg",
full.names = TRUE
))
# head(files_info)
files_info$size2 <-
files_info$size / 1000 # Convert bytes to kilobytes
size_kb <-
files_info$size2 # Creating a variable containing only the file size in Kb
# summary(size_kb)
# boxplot(size_kb)
cat('The mean size is ', mean(size_kb), 'kb') # What is the mean size?
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
top101_transp$scientific_name <-
order(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(value)))
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(value)))
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(melted$value)))
# head(top101)
summary(top101)
str(top101)
species <- data.frame(count(top101$scientific_name))
species[order(species[, 2], decreasing = T),]
levels(top101$shot_type)[levels(top101$shot_type) == 'd'] <-
'dorsal'
levels(top101$shot_type)[levels(top101$shot_type) == 'h'] <- 'head'
levels(top101$shot_type)[levels(top101$shot_type) == 'p'] <-
'profile'
# https://stackoverflow.com/questions/8186436/order-stacked-bar-graph-in-ggplot
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
top101_transp[1] <- sapply(
top101_transp[1],
gsub,
pattern = "_",
replacement = " "
)
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(melted$value)))
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(melted$value)))
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(melted$value))) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
# coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_x_discrete(limits = rev(levels(melted$scientific_name))) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
