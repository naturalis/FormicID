subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
g + geom_histogram(binwidth = 1,
colour = 'black',
aes(y = ..density..), fill = 'deepskyblue3')) +
stat_function(fun = dnorm,
color = 'red',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
g + geom_histogram(binwidth = 1,
colour = 'black',
aes(y = ..density..), fill = 'deepskyblue3') +
stat_function(fun = dnorm,
color = 'red',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
g <- ggplot(size_kb_df, aes(size_kb))
g + geom_histogram(binwidth = 1,
colour = 'black',
aes(y = ..density..), fill = 'deepskyblue3') +
stat_function(fun = dnorm,
color = 'red',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
g + geom_histogram(binwidth = 1,
colour = 'black',
aes(y = ..density..), fill = 'deepskyblue3') +
stat_function(fun = dnorm,
color = 'red',
size = '3',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
g + geom_histogram(binwidth = 1,
colour = 'black',
aes(y = ..density..), fill = 'deepskyblue3') +
stat_function(fun = dnorm,
color = 'red',
size = '3pt',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
g + geom_histogram(binwidth = 1,
colour = 'black',
aes(y = ..density..), fill = 'deepskyblue3') +
stat_function(fun = dnorm,
color = 'red',
size = '3.pt',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
g <- ggplot(size_kb_df, aes(size_kb))
g + geom_histogram(
binwidth = 1,
colour = 'black',
aes(y = ..density..),
fill = 'deepskyblue3'
) +
stat_function(fun = dnorm,
color = 'red',
args = list(
mean = mean(size_kb_df$size_kb),
sd = sd(size_kb_df$size_kb)
)) +
labs(title = "Histogram of file size density",
subtitle = "for FormicID-97") +
labs(x = "File size (Kb)", y = "Density (%)")  +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
) +
guides(fill = FALSE)
# Boxplot of the hight and width distribution
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions (pixels)") +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Channel") +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'),)
setwd(
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/stat/top101"
)
library(ggplot2) # for plotting
library(jpeg)
library(imager) # for reading jpg files
library(reshape2) # for using melt()
library(magick) # for image conversion because jpg files are read
data_dir <- # Setting the directory that contains all the images
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images"
top101 <-
read.csv('top101.csv') # spreadsheat containing catalognumber, scientific name,
# shot_type and image url
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Channel") +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Channel") +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile')) +
scale_x_discrete(labels = c('Height', 'Width'))
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Channel", labels = c('Height', 'Width')) +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
# histogram of distribution of the width
h <- hist(
df_good$width,
breaks = 50,
col = "red",
xlab = "Number of pixels",
main = "Pixel width distribution of the top 101 most imaged species"
)
# Plotting a normal distribution over the histogram
xfit <- seq(min(df_good$width), max(df_good$width), length = 40)
yfit <-
dnorm(xfit,
mean = mean(df_good$width),
sd = sd(df_good$width))
yfit <- yfit * diff(h$mids[1:2]) * length(df_good$width)
lines(xfit, yfit, col = "blue", lwd = 2)
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Channel", labels = c('Height', 'Width')) +
labs(title = "Boxplot of hight and width distribution",
subtitle = "for FormicID-97") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
) +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
setwd(
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/stat/top101"
)
library(ggplot2) # for plotting
library(jpeg)
library(imager) # for reading jpg files
library(reshape2) # for using melt()
library(magick) # for image conversion because jpg files are read
data_dir <- # Setting the directory that contains all the images
"~/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images"
top101 <-
read.csv('top101.csv') # spreadsheat containing catalognumber, scientific name,
# shot_type and image url
View(melted)
capitalize <- funcction(x) {
first <- toupper(substr(x, start=1, stop=1))
rest <- tolower(substr(x, start = 2, stop = nchr(x)))
paste0(first, rest)
}
levels(melted$scientific_name) <- capitalize(levels(melted$scientific_name))
capitalize <- funcction(x) {
first <- toupper(substr(x, start=1, stop=1))
rest <- tolower(substr(x, start = 2, stop = nchr(x)))
paste0(first, rest)
}
capitalize <- funcction(x){
first <- toupper(substr(x, start=1, stop=1))
rest <- tolower(substr(x, start = 2, stop = nchr(x)))
paste0(first, rest)
}
capitalize <- funcction(x){
first <- toupper(substr(x, start=1, stop=1))
rest <- tolower(substr(x, start = 2, stop = nchr(x)))
paste0(first, rest)
}
capitalize <- function(x){
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchr(x)))
paste0(first, rest)
}
levels(melted$scientific_name) <- capitalize(levels(melted$scientific_name))
capitalize <- function(x){
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(melted$scientific_name) <- capitalize(levels(melted$scientific_name))
melted <- as.data.frame(sapply(melted,gsub,pattern="_", replacement = " "))
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
View(top101_transp)
# https://stackoverflow.com/questions/8186436/order-stacked-bar-graph-in-ggplot
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
top101_transp <-
as.data.frame(sapply(
top101_transp,
gsub,
pattern = "_",
replacement = " "
))
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[-1])) # reorder based on a non-created total
View(top101_transp)
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[-1])) # reorder based on a non-created total
View(top101_transp)
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4)) # reorder based on a non-created total
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
as.numeric(levels(top101_transp$dorsal))
# https://stackoverflow.com/questions/8186436/order-stacked-bar-graph-in-ggplot
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
top101_transp <-
as.data.frame(sapply(
top101_transp[1],
gsub,
pattern = "_",
replacement = " "
))
as.data.frame(sapply(
top101_transp,
gsub,
pattern = "_",
replacement = " "
))
# https://stackoverflow.com/questions/8186436/order-stacked-bar-graph-in-ggplot
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
as.data.frame(sapply(
top101_transp,
gsub,
pattern = "_",
replacement = " "
))
sapply(
top101_transp,
gsub,
pattern = "_",
replacement = " "
))
sapply(
top101_transp,
gsub,
pattern = "_",
replacement = " "
)
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
capitalize <- function(x) {
first <- toupper(substr(x, start = 1, stop = 1))
rest <- tolower(substr(x, start = 2, stop = nchar(x)))
paste0(first, rest)
}
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
levels(top101_transp$scientific_name) <-
capitalize(levels(top101_transp$scientific_name))
sapply(
top101_transp,
gsub,
pattern = "_",
replacement = " "
)
top101_transp[1] <- sapply(
top101_transp[1],
gsub,
pattern = "_",
replacement = " "
)
top101_transp$scientific_name <-
reorder(top101_transp$scientific_name, rowSums(top101_transp[2:4])) # reorder based on a non-created total
melted <-
melt(top101_transp, id = 'scientific_name') # melt based on scientific_name
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable),
stat = 'identity',
width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "for FormicID-97") +
coord_flip() +
labs(x = "Species", y = "Number of images") +
theme(
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 10),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.position = 'top'
)  +
scale_fill_discrete(name = 'Shot type',
labels = c('dorsal', 'head', 'profile'))
