axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g + geom_bar(aes(x = scientific_name, y = freq, fill = shot_type), stat='identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
View(melted)
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), stat='identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g + geom_bar(aes(x = name, y = value, fill = variable), stat='identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
View(newdf)
top101_transp <- top101_transp[order(top101_transp$total),]
View(top101_transp)
melted <- melt(top101_transp, id.vars = "scientific_name", 'dorsal', 'head', 'profile')
View(melted)
melted <- melt(top101_transp, id.variables = "scientific_name", 'dorsal', 'head', 'profile')
View(melted)
melted <- melt(top101_transp, id.variables = "scientific_name")
View(melted)
g <-
ggplot(top101_transp) # Ploting image distribution per species per shot type
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), stat='identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
melted <- melted[order(melted$total),]
melted <- melted[order(melted$total),]
View(melted)
melted <- melted[order(melted$value),]
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), stat='identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
top101_transp <- read.csv('top101_transp')
top101_transp <- read.csv('top101_transp.csv')
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp <- top101_transp[order(top101_transp$total),]
g + geom_bar(aes(fct_infreq(scientific_name), fill = shot_type), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
View(top101_transp)
top101_transp2$total <- NULL
top101_transp$total <- NULL
levels(top101_transp$scientific_name)
top1o1_transp$scientific_name <- reorder(top101$scientific_name, rowSums(samp.data[-1]))
top101_transp$scientific_name <- reorder(top101$scientific_name, rowSums(top101_transp[-1]))
top101_transp$scientific_name <- reorder(top101_transp$scientific_name, rowSums(top101_transp[-1]))
View(top101_transp)
melted <- melt(top101_transp, id='scientific_name')
View(melted)
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g + geom_bar(aes(x = scientific_name, y = value, fill = variable, stat = 'identity'), width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), stat = 'identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
top101_transp <- read.csv('top101_transp.csv', sep = ';')
top101_transp$total <- NULL # remove total
top101_transp$scientific_name <- reorder(top101_transp$scientific_name, rowSums(top101_transp[-1])) # reorder based on a non-created total
melted <- melt(top101_transp, id='scientific_name') # melt based on scientific_name
g <-
ggplot(melted) # Ploting image distribution per species per shot type
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), stat = 'identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 25),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g + geom_bar(aes(x = scientific_name, y = value, fill = variable), stat = 'identity', width = 0.5) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6)) +
labs(title = "Histogram of species distrubition per shottype",
subtitle = "from FormicID-97") +
coord_flip() +
labs(x = "Number of images", y = "Species") +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
View(df_good_melt)
View(df_good)
df_good$names <- rownames(df_good)
View(df_good)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern="/Users/nijram13/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images/", replacement = ""))
View(df_good2)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern=".jpg", replacement = ""))
View(df_good2)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern="/Users/nijram13/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images/", replacement = ""))
df_good2 <- as.data.frame(sapply(df_good2,gsub,pattern=".jpg", replacement = ""))
View(df_good2)
library(stringr)
str_sub(df_good2$names, -2, -1)
str_sub(df_good2$names, 12, -1)
str_sub(df_good2$names, 1, -1)
str_sub(df_good2$names, 2, -1)
df_channel_wrong <- subset(df, channel <= 2)
df_good <- subset(df, channel > 2)
df_good$names <- rownames(df_good)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern="/Users/nijram13/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images/", replacement = ""))
df_good2 <- as.data.frame(sapply(d
df_good2 <- as.data.frame(sapply(df_good2,gsub,pattern=".jpg", replacement = ""))
df_good2 <- as.data.frame(sapply(df_good2,gsub,pattern=".jpg", replacement = ""))
str_sub(df_good2$names, 1, -1)
str_sub(df_good2$names, -1, -1)
df_shot_types <- str_sub(df_good2$names, -1, -1)
df_good2$shot_type <- df_shot_types
View(df_good2)
df_good_melt <- melt(df_good[1:2,6])
df_good_melt <- melt(df_good2[1:2,6])
View(df_good_melt)
df_good_melt <- melt(df_good2$height, df_good2$depth, df_good2$shot_type)
View(df_good_melt)
df_good_melt <- subset(df_good2$height, df_good2$depth, df_good2$shot_type)
df_good_melt <- subset(height, depth, shot_type)
df_good_melt <- melt(df_good2$height, df_good2$depth)
View(df_good_melt)
df_good_melt <- melt(df_good[1:2])
df_good_melt <- melt(df_good[1:6])
df_good_melt <- melt(df_good2[1:6])
View(df_good_melt)
summary(df_good_melt)
g + geom_boxplot(aes(x = variable, y = value, fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt)
g + geom_boxplot(aes(x = variable, y = value, fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_boxplot(aes(x = height, y = width, fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
df_good_melt$height <- as.numeric(df_good_melt$height)
View(df_good_melt)
df_good_melt$height <- as.integer(df_good_melt$height)
df_channel_wrong <- subset(df, channel <= 2)
df_good <- subset(df, channel > 2)
df_good$names <- rownames(df_good)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern="/Users/nijram13/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images/", replacement = ""))
df_good2 <- as.data.frame(sapply(df_good2,gsub,pattern=".jpg", replacement = ""))
library(stringr)
df_shot_types <- str_sub(df_good2$names, -1, -1)
df_good2$shot_type <- df_shot_types
df_good_melt <- melt(df_good2[1:6])
summary(df_good_melt)
df_good_melt$height <- as.integer(df_good_melt$height)
df_channel_wrong <- subset(df, channel <= 2)
df_good <- subset(df, channel > 2)
df_good$names <- rownames(df_good)
df_good2 <- as.data.frame(sapply(df_good,gsub,pattern="/Users/nijram13/Google Drive/4. Biologie/Studie Biologie/Master Year 2/Internship CNN/8. FormicID/FormicID/data/2018-01-17_top101-images/", replacement = ""))
df_good2 <- as.data.frame(sapply(df_good2,gsub,pattern=".jpg", replacement = ""))
library(stringr)
df_shot_types <- str_sub(df_good2$names, -1, -1)
df_good2$shot_type <- df_shot_types
df_good_melt <- melt(df_good2[1:6])
summary(df_good_melt)
df_good_melt$height <- as.numeric(as.chacter(df_good_melt$height))
df_good_melt$height <- as.numeric(as.character(df_good_melt$height))
df_good_melt$width <- as.numeric(as.character(df_good_melt$width))
g + geom_boxplot(aes(x = height, y = width, fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_boxplot(aes(x = height, y = width, fill = factor(shot_type), alpha = 0.7) +
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt)
g + geom_boxplot(aes(x = height, y = width, fill = factor(shot_type), alpha = 0.7) +
g + geom_boxplot(aes(x = height, y = width, fill = factor(shot_type), alpha = 0.7)) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_boxplot(aes(height, width, fill = factor(shot_type), alpha = 0.7)) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(height, width))
g + geom_boxplot(fill = factor(shot_type), alpha = 0.7)) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_boxplot(fill = factor(shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
df_good_melt$shot_type <- as.factor(df_good_melt$shot_type)
g + geom_boxplot(fill = shot_type, alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(height, width))
g + geom_boxplot(fill = shot_type, alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7) +
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7) +
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution") +
theme(vjust = 0.6)
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# histogram of distribution of the width
h <- hist(
df_good$width,
breaks = 50,
col = "red",
xlab = "Number of pixels",
main = "Pixel width distribution of the top 101 most imaged species"
)
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(y = height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_melt, aes(x = height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
df_good_small[,c(1,2,6)]
df_good_small <- df_good_melt[,c(1,2,6)]
View(df_good_small)
# Boxplot of the hight and width distribution
g <- ggplot(df_good_small, aes(x = height))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_small, aes(y = height))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_small, aes(height))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_small aes(x = height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(df_good_small, aes(x = height, width))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
melted_df <- melt(df_good_small)
View(melted_df)
# Boxplot of the hight and width distribution
g <- ggplot(melted_df, aes(x = variable, y = value))
# Boxplot of the hight and width distribution
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type, alpha = 0.7))+
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution")
# Boxplot of the hight and width distribution
g <- ggplot(melted_df, aes(x = variable, y = value))
g + geom_boxplot(aes(fill = shot_type), alpha = 0.7) +
scale_y_continuous(name = "Number of Pixels",
breaks = seq(0, 225, 25),
limits = c(0, 225)) +
scale_x_discrete(name = "Dimensions") +
ggtitle("Boxplot of hight and width distribution") +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g + geom_bar(aes(shot_type), position = 'dodge') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
ggtitle("Shot type distribution") +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
g <- ggplot(top101)
g + geom_bar(aes(shot_type), position = 'dodge') +
coord_cartesian(ylim = c(3350, 3450)) +
xlab("Shot types") + ylab("Number of images") +
ggtitle("Shot type distribution") +
theme(
plot.title = element_text(size = 20),
plot.subtitle = element_text(size = 15),
axis.title = element_text(size = 15),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15),
legend.position = 'top'
)
